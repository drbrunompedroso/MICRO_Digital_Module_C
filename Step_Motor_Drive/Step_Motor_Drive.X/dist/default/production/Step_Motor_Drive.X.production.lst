

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Mar 22 21:38:25 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4520 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  007EAA                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _HalfMode
    62  007EAA  000C               	dw	12
    63  007EAC  0004               	dw	4
    64  007EAE  0006               	dw	6
    65  007EB0  0002               	dw	2
    66  007EB2  0003               	dw	3
    67  007EB4  0001               	dw	1
    68  007EB6  0009               	dw	9
    69  007EB8  0008               	dw	8
    70                           
    71                           ;initializer for _FullMode
    72  007EBA  000C               	dw	12
    73  007EBC  0006               	dw	6
    74  007EBE  0003               	dw	3
    75  007EC0  0009               	dw	9
    76  0000                     _PORTBbits	set	3969
    77  0000                     _OSCTUNE	set	3995
    78  0000                     _OSCCON	set	4051
    79  0000                     _ADCON1	set	4033
    80  0000                     _PORTD	set	3971
    81  0000                     _TRISD	set	3989
    82  0000                     _TRISB	set	3987
    83                           
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87  007EC2                     __pcinit:
    88                           	callstack 0
    89  007EC2                     start_initialization:
    90                           	callstack 0
    91  007EC2                     __initialization:
    92                           	callstack 0
    93                           
    94                           ; Initialize objects allocated to COMRAM (24 bytes)
    95                           ; load TBLPTR registers with __pidataCOMRAM
    96  007EC2  0EAA               	movlw	low __pidataCOMRAM
    97  007EC4  6EF6               	movwf	tblptrl,c
    98  007EC6  0E7E               	movlw	high __pidataCOMRAM
    99  007EC8  6EF7               	movwf	tblptrh,c
   100  007ECA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   101  007ECC  6EF8               	movwf	tblptru,c
   102  007ECE  EE00  F001         	lfsr	0,__pdataCOMRAM
   103  007ED2  EE10 F018          	lfsr	1,24
   104  007ED6                     copy_data0:
   105  007ED6  0009               	tblrd		*+
   106  007ED8  CFF5 FFEE          	movff	tablat,postinc0
   107  007EDC  50E5               	movf	postdec1,w,c
   108  007EDE  50E1               	movf	fsr1l,w,c
   109  007EE0  E1FA               	bnz	copy_data0
   110                           
   111                           ; Clear objects allocated to COMRAM (2 bytes)
   112  007EE2  6A1A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   113  007EE4  6A19               	clrf	__pbssCOMRAM& (0+255),c
   114  007EE6                     end_of_initialization:
   115                           	callstack 0
   116  007EE6                     __end_of__initialization:
   117                           	callstack 0
   118  007EE6  0100               	movlb	0
   119  007EE8  EFD2  F03F         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	bssCOMRAM
   122  000019                     __pbssCOMRAM:
   123                           	callstack 0
   124  000019                     _i:
   125                           	callstack 0
   126  000019                     	ds	2
   127                           
   128                           	psect	dataCOMRAM
   129  000001                     __pdataCOMRAM:
   130                           	callstack 0
   131  000001                     _HalfMode:
   132                           	callstack 0
   133  000001                     	ds	16
   134  000011                     _FullMode:
   135                           	callstack 0
   136  000011                     	ds	8
   137                           
   138                           	psect	cstackCOMRAM
   139  00001B                     __pcstackCOMRAM:
   140                           	callstack 0
   141  00001B                     ??_Full_Step:
   142  00001B                     ??_Half_Step:
   143  00001B                     
   144                           ; 1 bytes @ 0x0
   145  00001B                     	ds	2
   146  00001D                     
   147                           ; 1 bytes @ 0x2
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 125 in file "StepMotor_program.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;		None
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   167 ;;      Params:         0       0       0       0       0       0       0
   168 ;;      Locals:         0       0       0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0       0       0
   170 ;;      Totals:         0       0       0       0       0       0       0
   171 ;;Total ram usage:        0 bytes
   172 ;; Hardware stack levels required when called: 1
   173 ;; This function calls:
   174 ;;		_Full_Step
   175 ;;		_Half_Step
   176 ;;		_Stop_mode
   177 ;;		_config_FOSC
   178 ;;		_config_IO
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text0
   185  007FA4                     __ptext0:
   186                           	callstack 0
   187  007FA4                     _main:
   188                           	callstack 30
   189  007FA4                     
   190                           ;StepMotor_program.c: 127:     config_FOSC();
   191  007FA4  EC40  F03F         	call	_config_FOSC	;wreg free
   192                           
   193                           ;StepMotor_program.c: 128:     config_IO();
   194  007FA8  EC4C  F03F         	call	_config_IO	;wreg free
   195  007FAC                     l763:
   196                           
   197                           ;StepMotor_program.c: 130:     {;StepMotor_program.c: 131:         if(PORTBbits.RB0 == 0
      +                           && PORTBbits.RB1 == 1)
   198  007FAC  B081               	btfsc	129,0,c	;volatile
   199  007FAE  EFDB  F03F         	goto	u31
   200  007FB2  EFDD  F03F         	goto	u30
   201  007FB6                     u31:
   202  007FB6  EFE8  F03F         	goto	l49
   203  007FBA                     u30:
   204  007FBA  A281               	btfss	129,1,c	;volatile
   205  007FBC  EFE2  F03F         	goto	u41
   206  007FC0  EFE4  F03F         	goto	u40
   207  007FC4                     u41:
   208  007FC4  EFE8  F03F         	goto	l49
   209  007FC8                     u40:
   210  007FC8                     
   211                           ;StepMotor_program.c: 132:         {;StepMotor_program.c: 133:             Full_Step();
   212  007FC8  EC76  F03F         	call	_Full_Step	;wreg free
   213                           
   214                           ;StepMotor_program.c: 134:         }
   215  007FCC  EFD6  F03F         	goto	l763
   216  007FD0                     l49:
   217  007FD0  A081               	btfss	129,0,c	;volatile
   218  007FD2  EFED  F03F         	goto	u51
   219  007FD6  EFEF  F03F         	goto	u50
   220  007FDA                     u51:
   221  007FDA  EFFA  F03F         	goto	l773
   222  007FDE                     u50:
   223  007FDE  B281               	btfsc	129,1,c	;volatile
   224  007FE0  EFF4  F03F         	goto	u61
   225  007FE4  EFF6  F03F         	goto	u60
   226  007FE8                     u61:
   227  007FE8  EFFA  F03F         	goto	l773
   228  007FEC                     u60:
   229  007FEC                     
   230                           ;StepMotor_program.c: 136:         {;StepMotor_program.c: 137:             Half_Step();
   231  007FEC  ECA4  F03F         	call	_Half_Step	;wreg free
   232                           
   233                           ;StepMotor_program.c: 138:         }
   234  007FF0  EFD6  F03F         	goto	l763
   235  007FF4                     l773:
   236                           
   237                           ;StepMotor_program.c: 140:         {;StepMotor_program.c: 141:             Stop_mode();
   238  007FF4  EC45  F03F         	call	_Stop_mode	;wreg free
   239  007FF8  EFD6  F03F         	goto	l763
   240  007FFC  EF00  F000         	goto	start
   241  008000                     __end_of_main:
   242                           	callstack 0
   243                           
   244 ;; *************** function _config_IO *****************
   245 ;; Defined at:
   246 ;;		line 85 in file "StepMotor_program.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   260 ;;      Params:         0       0       0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0       0       0
   263 ;;      Totals:         0       0       0       0       0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels used: 1
   266 ;; This function calls:
   267 ;;		Nothing
   268 ;; This function is called by:
   269 ;;		_main
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text1
   274  007E98                     __ptext1:
   275                           	callstack 0
   276  007E98                     _config_IO:
   277                           	callstack 30
   278  007E98                     
   279                           ;StepMotor_program.c: 87:     TRISB = 0X03;
   280  007E98  0E03               	movlw	3
   281  007E9A  6E93               	movwf	147,c	;volatile
   282                           
   283                           ;StepMotor_program.c: 88:     TRISD = 0X00;
   284  007E9C  0E00               	movlw	0
   285  007E9E  6E95               	movwf	149,c	;volatile
   286                           
   287                           ;StepMotor_program.c: 89:     PORTD = 0X00;
   288  007EA0  0E00               	movlw	0
   289  007EA2  6E83               	movwf	131,c	;volatile
   290                           
   291                           ;StepMotor_program.c: 90:     ADCON1 = 0X0F;
   292  007EA4  0E0F               	movlw	15
   293  007EA6  6EC1               	movwf	193,c	;volatile
   294  007EA8  0012               	return		;funcret
   295  007EAA                     __end_of_config_IO:
   296                           	callstack 0
   297                           
   298 ;; *************** function _config_FOSC *****************
   299 ;; Defined at:
   300 ;;		line 93 in file "StepMotor_program.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   314 ;;      Params:         0       0       0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels used: 1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text2
   328  007E80                     __ptext2:
   329                           	callstack 0
   330  007E80                     _config_FOSC:
   331                           	callstack 30
   332  007E80                     
   333                           ;StepMotor_program.c: 95:     OSCCON = 0X00;
   334  007E80  0E00               	movlw	0
   335  007E82  6ED3               	movwf	211,c	;volatile
   336                           
   337                           ;StepMotor_program.c: 96:     OSCTUNE = 0X00;
   338  007E84  0E00               	movlw	0
   339  007E86  6E9B               	movwf	155,c	;volatile
   340  007E88  0012               	return		;funcret
   341  007E8A                     __end_of_config_FOSC:
   342                           	callstack 0
   343                           
   344 ;; *************** function _Stop_mode *****************
   345 ;; Defined at:
   346 ;;		line 119 in file "StepMotor_program.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   360 ;;      Params:         0       0       0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used: 1
   366 ;; This function calls:
   367 ;;		Nothing
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text3
   374  007E8A                     __ptext3:
   375                           	callstack 0
   376  007E8A                     _Stop_mode:
   377                           	callstack 30
   378  007E8A                     
   379                           ;StepMotor_program.c: 121:     PORTD = 0X00;
   380  007E8A  0E00               	movlw	0
   381  007E8C  6E83               	movwf	131,c	;volatile
   382                           
   383                           ;StepMotor_program.c: 122:     i=0;
   384  007E8E  0E00               	movlw	0
   385  007E90  6E1A               	movwf	(_i+1)^0,c
   386  007E92  0E00               	movlw	0
   387  007E94  6E19               	movwf	_i^0,c
   388  007E96  0012               	return		;funcret
   389  007E98                     __end_of_Stop_mode:
   390                           	callstack 0
   391                           
   392 ;; *************** function _Half_Step *****************
   393 ;; Defined at:
   394 ;;		line 109 in file "StepMotor_program.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   408 ;;      Params:         0       0       0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0       0       0
   410 ;;      Temps:          2       0       0       0       0       0       0
   411 ;;      Totals:         2       0       0       0       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text4
   422  007F48                     __ptext4:
   423                           	callstack 0
   424  007F48                     _Half_Step:
   425                           	callstack 30
   426  007F48  EFBF  F03F         	goto	l755
   427  007F4C                     l749:
   428                           
   429                           ;StepMotor_program.c: 112:     {;StepMotor_program.c: 113:         PORTD = HalfMode[i];
   430  007F4C  90D8               	bcf	status,0,c
   431  007F4E  3419               	rlcf	_i^0,w,c
   432  007F50  6ED9               	movwf	fsr2l,c
   433  007F52  341A               	rlcf	(_i+1)^0,w,c
   434  007F54  6EDA               	movwf	fsr2h,c
   435  007F56  0E01               	movlw	low _HalfMode
   436  007F58  26D9               	addwf	fsr2l,f,c
   437  007F5A  0E00               	movlw	high _HalfMode
   438  007F5C  22DA               	addwfc	fsr2h,f,c
   439  007F5E  50DF               	movf	indf2,w,c
   440  007F60  6E83               	movwf	131,c	;volatile
   441  007F62                     
   442                           ;StepMotor_program.c: 114:         _delay((unsigned long)((100)*(8000000/4000.0)));
   443  007F62  0E02               	movlw	2
   444  007F64  6E1C               	movwf	(??_Half_Step+1)^0,c
   445  007F66  0E04               	movlw	4
   446  007F68  6E1B               	movwf	??_Half_Step^0,c
   447  007F6A  0EBA               	movlw	186
   448  007F6C                     u77:
   449  007F6C  2EE8               	decfsz	wreg,f,c
   450  007F6E  D7FE               	bra	u77
   451  007F70  2E1B               	decfsz	??_Half_Step^0,f,c
   452  007F72  D7FC               	bra	u77
   453  007F74  2E1C               	decfsz	(??_Half_Step+1)^0,f,c
   454  007F76  D7FA               	bra	u77
   455  007F78  D000               	nop2	
   456  007F7A                     
   457                           ;StepMotor_program.c: 115:     }
   458  007F7A  4A19               	infsnz	_i^0,f,c
   459  007F7C  2A1A               	incf	(_i+1)^0,f,c
   460  007F7E                     l755:
   461  007F7E  BE1A               	btfsc	(_i+1)^0,7,c
   462  007F80  EFCB  F03F         	goto	u21
   463  007F84  501A               	movf	(_i+1)^0,w,c
   464  007F86  E109               	bnz	u20
   465  007F88  0E08               	movlw	8
   466  007F8A  5C19               	subwf	_i^0,w,c
   467  007F8C  A0D8               	btfss	status,0,c
   468  007F8E  EFCB  F03F         	goto	u21
   469  007F92  EFCD  F03F         	goto	u20
   470  007F96                     u21:
   471  007F96  EFA6  F03F         	goto	l749
   472  007F9A                     u20:
   473  007F9A                     
   474                           ;StepMotor_program.c: 116:     i=0;
   475  007F9A  0E00               	movlw	0
   476  007F9C  6E1A               	movwf	(_i+1)^0,c
   477  007F9E  0E00               	movlw	0
   478  007FA0  6E19               	movwf	_i^0,c
   479  007FA2  0012               	return		;funcret
   480  007FA4                     __end_of_Half_Step:
   481                           	callstack 0
   482                           
   483 ;; *************** function _Full_Step *****************
   484 ;; Defined at:
   485 ;;		line 99 in file "StepMotor_program.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   499 ;;      Params:         0       0       0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0
   501 ;;      Temps:          2       0       0       0       0       0       0
   502 ;;      Totals:         2       0       0       0       0       0       0
   503 ;;Total ram usage:        2 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text5
   513  007EEC                     __ptext5:
   514                           	callstack 0
   515  007EEC                     _Full_Step:
   516                           	callstack 30
   517  007EEC  EF91  F03F         	goto	l743
   518  007EF0                     l737:
   519                           
   520                           ;StepMotor_program.c: 102:     {;StepMotor_program.c: 103:         PORTD = FullMode[i];
   521  007EF0  90D8               	bcf	status,0,c
   522  007EF2  3419               	rlcf	_i^0,w,c
   523  007EF4  6ED9               	movwf	fsr2l,c
   524  007EF6  341A               	rlcf	(_i+1)^0,w,c
   525  007EF8  6EDA               	movwf	fsr2h,c
   526  007EFA  0E11               	movlw	low _FullMode
   527  007EFC  26D9               	addwf	fsr2l,f,c
   528  007EFE  0E00               	movlw	high _FullMode
   529  007F00  22DA               	addwfc	fsr2h,f,c
   530  007F02  50DF               	movf	indf2,w,c
   531  007F04  6E83               	movwf	131,c	;volatile
   532  007F06                     
   533                           ;StepMotor_program.c: 104:         _delay((unsigned long)((100)*(8000000/4000.0)));
   534  007F06  0E02               	movlw	2
   535  007F08  6E1C               	movwf	(??_Full_Step+1)^0,c
   536  007F0A  0E04               	movlw	4
   537  007F0C  6E1B               	movwf	??_Full_Step^0,c
   538  007F0E  0EBA               	movlw	186
   539  007F10                     u87:
   540  007F10  2EE8               	decfsz	wreg,f,c
   541  007F12  D7FE               	bra	u87
   542  007F14  2E1B               	decfsz	??_Full_Step^0,f,c
   543  007F16  D7FC               	bra	u87
   544  007F18  2E1C               	decfsz	(??_Full_Step+1)^0,f,c
   545  007F1A  D7FA               	bra	u87
   546  007F1C  D000               	nop2	
   547  007F1E                     
   548                           ;StepMotor_program.c: 105:     }
   549  007F1E  4A19               	infsnz	_i^0,f,c
   550  007F20  2A1A               	incf	(_i+1)^0,f,c
   551  007F22                     l743:
   552  007F22  BE1A               	btfsc	(_i+1)^0,7,c
   553  007F24  EF9D  F03F         	goto	u11
   554  007F28  501A               	movf	(_i+1)^0,w,c
   555  007F2A  E109               	bnz	u10
   556  007F2C  0E04               	movlw	4
   557  007F2E  5C19               	subwf	_i^0,w,c
   558  007F30  A0D8               	btfss	status,0,c
   559  007F32  EF9D  F03F         	goto	u11
   560  007F36  EF9F  F03F         	goto	u10
   561  007F3A                     u11:
   562  007F3A  EF78  F03F         	goto	l737
   563  007F3E                     u10:
   564  007F3E                     
   565                           ;StepMotor_program.c: 106:     i=0;
   566  007F3E  0E00               	movlw	0
   567  007F40  6E1A               	movwf	(_i+1)^0,c
   568  007F42  0E00               	movlw	0
   569  007F44  6E19               	movwf	_i^0,c
   570  007F46  0012               	return		;funcret
   571  007F48                     __end_of_Full_Step:
   572                           	callstack 0
   573  0000                     
   574                           	psect	rparam
   575  0000                     
   576                           	psect	idloc
   577                           
   578                           ;Config register IDLOC0 @ 0x200000
   579                           ;	unspecified, using default values
   580  200000                     	org	2097152
   581  200000  FF                 	db	255
   582                           
   583                           ;Config register IDLOC1 @ 0x200001
   584                           ;	unspecified, using default values
   585  200001                     	org	2097153
   586  200001  FF                 	db	255
   587                           
   588                           ;Config register IDLOC2 @ 0x200002
   589                           ;	unspecified, using default values
   590  200002                     	org	2097154
   591  200002  FF                 	db	255
   592                           
   593                           ;Config register IDLOC3 @ 0x200003
   594                           ;	unspecified, using default values
   595  200003                     	org	2097155
   596  200003  FF                 	db	255
   597                           
   598                           ;Config register IDLOC4 @ 0x200004
   599                           ;	unspecified, using default values
   600  200004                     	org	2097156
   601  200004  FF                 	db	255
   602                           
   603                           ;Config register IDLOC5 @ 0x200005
   604                           ;	unspecified, using default values
   605  200005                     	org	2097157
   606  200005  FF                 	db	255
   607                           
   608                           ;Config register IDLOC6 @ 0x200006
   609                           ;	unspecified, using default values
   610  200006                     	org	2097158
   611  200006  FF                 	db	255
   612                           
   613                           ;Config register IDLOC7 @ 0x200007
   614                           ;	unspecified, using default values
   615  200007                     	org	2097159
   616  200007  FF                 	db	255
   617                           
   618                           	psect	config
   619                           
   620                           ; Padding undefined space
   621  300000                     	org	3145728
   622  300000  FF                 	db	255
   623                           
   624                           ;Config register CONFIG1H @ 0x300001
   625                           ;	Oscillator Selection bits
   626                           ;	OSC = HS, HS oscillator
   627                           ;	Fail-Safe Clock Monitor Enable bit
   628                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   629                           ;	Internal/External Oscillator Switchover bit
   630                           ;	IESO = OFF, Oscillator Switchover mode disabled
   631  300001                     	org	3145729
   632  300001  02                 	db	2
   633                           
   634                           ;Config register CONFIG2L @ 0x300002
   635                           ;	Power-up Timer Enable bit
   636                           ;	PWRT = OFF, PWRT disabled
   637                           ;	Brown-out Reset Enable bits
   638                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   639                           ;	Brown Out Reset Voltage bits
   640                           ;	BORV = 3, Minimum setting
   641  300002                     	org	3145730
   642  300002  19                 	db	25
   643                           
   644                           ;Config register CONFIG2H @ 0x300003
   645                           ;	Watchdog Timer Enable bit
   646                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   647                           ;	Watchdog Timer Postscale Select bits
   648                           ;	WDTPS = 32768, 1:32768
   649  300003                     	org	3145731
   650  300003  1E                 	db	30
   651                           
   652                           ; Padding undefined space
   653  300004                     	org	3145732
   654  300004  FF                 	db	255
   655                           
   656                           ;Config register CONFIG3H @ 0x300005
   657                           ;	CCP2 MUX bit
   658                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   659                           ;	PORTB A/D Enable bit
   660                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   661                           ;	Low-Power Timer1 Oscillator Enable bit
   662                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   663                           ;	MCLR Pin Enable bit
   664                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   665  300005                     	org	3145733
   666  300005  81                 	db	129
   667                           
   668                           ;Config register CONFIG4L @ 0x300006
   669                           ;	Stack Full/Underflow Reset Enable bit
   670                           ;	STVREN = ON, Stack full/underflow will cause Reset
   671                           ;	Single-Supply ICSP Enable bit
   672                           ;	LVP = OFF, Single-Supply ICSP disabled
   673                           ;	Extended Instruction Set Enable bit
   674                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   675                           ;	Background Debugger Enable bit
   676                           ;	DEBUG = 0x1, unprogrammed default
   677  300006                     	org	3145734
   678  300006  81                 	db	129
   679                           
   680                           ; Padding undefined space
   681  300007                     	org	3145735
   682  300007  FF                 	db	255
   683                           
   684                           ;Config register CONFIG5L @ 0x300008
   685                           ;	Code Protection bit
   686                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   687                           ;	Code Protection bit
   688                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   689                           ;	Code Protection bit
   690                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   691                           ;	Code Protection bit
   692                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   693  300008                     	org	3145736
   694  300008  0F                 	db	15
   695                           
   696                           ;Config register CONFIG5H @ 0x300009
   697                           ;	Boot Block Code Protection bit
   698                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   699                           ;	Data EEPROM Code Protection bit
   700                           ;	CPD = OFF, Data EEPROM not code-protected
   701  300009                     	org	3145737
   702  300009  C0                 	db	192
   703                           
   704                           ;Config register CONFIG6L @ 0x30000A
   705                           ;	Write Protection bit
   706                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   707                           ;	Write Protection bit
   708                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   709                           ;	Write Protection bit
   710                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   711                           ;	Write Protection bit
   712                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   713  30000A                     	org	3145738
   714  30000A  0F                 	db	15
   715                           
   716                           ;Config register CONFIG6H @ 0x30000B
   717                           ;	Configuration Register Write Protection bit
   718                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   719                           ;	Boot Block Write Protection bit
   720                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   721                           ;	Data EEPROM Write Protection bit
   722                           ;	WRTD = OFF, Data EEPROM not write-protected
   723  30000B                     	org	3145739
   724  30000B  E0                 	db	224
   725                           
   726                           ;Config register CONFIG7L @ 0x30000C
   727                           ;	Table Read Protection bit
   728                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   729                           ;	Table Read Protection bit
   730                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   731                           ;	Table Read Protection bit
   732                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   733                           ;	Table Read Protection bit
   734                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   735  30000C                     	org	3145740
   736  30000C  0F                 	db	15
   737                           
   738                           ;Config register CONFIG7H @ 0x30000D
   739                           ;	Boot Block Table Read Protection bit
   740                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   741  30000D                     	org	3145741
   742  30000D  40                 	db	64
   743                           tosu	equ	0xFFF
   744                           tosh	equ	0xFFE
   745                           tosl	equ	0xFFD
   746                           stkptr	equ	0xFFC
   747                           pclatu	equ	0xFFB
   748                           pclath	equ	0xFFA
   749                           pcl	equ	0xFF9
   750                           tblptru	equ	0xFF8
   751                           tblptrh	equ	0xFF7
   752                           tblptrl	equ	0xFF6
   753                           tablat	equ	0xFF5
   754                           prodh	equ	0xFF4
   755                           prodl	equ	0xFF3
   756                           indf0	equ	0xFEF
   757                           postinc0	equ	0xFEE
   758                           postdec0	equ	0xFED
   759                           preinc0	equ	0xFEC
   760                           plusw0	equ	0xFEB
   761                           fsr0h	equ	0xFEA
   762                           fsr0l	equ	0xFE9
   763                           wreg	equ	0xFE8
   764                           indf1	equ	0xFE7
   765                           postinc1	equ	0xFE6
   766                           postdec1	equ	0xFE5
   767                           preinc1	equ	0xFE4
   768                           plusw1	equ	0xFE3
   769                           fsr1h	equ	0xFE2
   770                           fsr1l	equ	0xFE1
   771                           bsr	equ	0xFE0
   772                           indf2	equ	0xFDF
   773                           postinc2	equ	0xFDE
   774                           postdec2	equ	0xFDD
   775                           preinc2	equ	0xFDC
   776                           plusw2	equ	0xFDB
   777                           fsr2h	equ	0xFDA
   778                           fsr2l	equ	0xFD9
   779                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2      28
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Full_Step
    _main->_Half_Step

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _Full_Step
                          _Half_Step
                          _Stop_mode
                        _config_FOSC
                          _config_IO
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Stop_mode                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Half_Step                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Full_Step                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Full_Step
   _Half_Step
   _Stop_mode
   _config_FOSC
   _config_IO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      2      1C       1       22.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      15        0.0%
DATA                 0      0      1C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Mar 22 21:38:25 2022

                      _i 0019                       l40 7FA2                       l25 7EA8  
                     l34 7F46                       l43 7E96                       l28 7E88  
                     l49 7FD0                       u10 7F3E                       u11 7F3A  
                     u20 7F9A                       u21 7F96                       u30 7FBA  
                     u31 7FB6                       u40 7FC8                       u41 7FC4  
                     u50 7FDE                       u51 7FDA                       u60 7FEC  
                     u61 7FE8                       u77 7F6C                       u87 7F10  
                    l731 7E98                      l741 7F1E                      l733 7E80  
                    l743 7F22                      l735 7EEC                      l751 7F62  
                    l745 7F3E                      l737 7EF0                      l753 7F7A  
                    l761 7FA4                      l739 7F06                      l755 7F7E  
                    l747 7F48                      l771 7FEC                      l763 7FAC  
                    l757 7F9A                      l749 7F4C                      l773 7FF4  
                    l765 7FBA                      l759 7E8A                      l767 7FC8  
                    l769 7FDE                      wreg 000FE8                     _main 7FA4  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
                  ?_main 001B                    _PORTD 000F83                    _TRISB 000F93  
                  _TRISD 000F95                    tablat 000FF5                    status 000FD8  
        __initialization 7EC2             __end_of_main 8000       __size_of_Half_Step 005C  
                 ??_main 001D            __activetblptr 000000                   _ADCON1 000FC1  
                 _OSCCON 000FD3       __size_of_Full_Step 005C     __size_of_config_FOSC 000A  
                 isa$std 000001             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8       __size_of_Stop_mode 000E  
             __accesstop 0080  __end_of__initialization 7EE6        __end_of_Half_Step 7FA4  
          ___rparam_used 000001           __pcstackCOMRAM 001B        __end_of_Full_Step 7F48  
     __size_of_config_IO 0012        __end_of_Stop_mode 7E98                  _OSCTUNE 000F9B  
                __Hparam 0000                  __Lparam 0000        __end_of_config_IO 7EAA  
                __pcinit 7EC2                  __ramtop 0600                  __ptext0 7FA4  
                __ptext1 7E98                  __ptext2 7E80                  __ptext3 7E8A  
                __ptext4 7F48                  __ptext5 7EEC     end_of_initialization 7EE6  
                postdec1 000FE5                  postinc0 000FEE                _PORTBbits 000F81  
          ??_config_FOSC 001B                _Half_Step 7F48            __pidataCOMRAM 7EAA  
    start_initialization 7EC2                _Full_Step 7EEC               ?_Half_Step 001B  
    __end_of_config_FOSC 7E8A              __pbssCOMRAM 0019                _Stop_mode 7E8A  
             ?_Full_Step 001B                _config_IO 7E98               ?_Stop_mode 001B  
            _config_FOSC 7E80              ??_Half_Step 001B               ?_config_IO 001B  
               _HalfMode 0001              ??_Full_Step 001B                copy_data0 7ED6  
               _FullMode 0011                 __Hrparam 0000                 __Lrparam 0000  
            ??_Stop_mode 001B            __size_of_main 005C                 isa$xinst 000000  
            ??_config_IO 001B             ?_config_FOSC 001B  
