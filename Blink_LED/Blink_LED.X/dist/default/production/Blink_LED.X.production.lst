

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 21 15:27:48 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4520 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTDbits	set	3971
    50  0000                     _PORTBbits	set	3969
    51  0000                     _OSCTUNE	set	3995
    52  0000                     _OSCCON	set	4051
    53  0000                     _ADCON1	set	4033
    54  0000                     _PORTD	set	3971
    55  0000                     _TRISD	set	3989
    56  0000                     _TRISB	set	3987
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  007F8A                     __pcinit:
    62                           	callstack 0
    63  007F8A                     start_initialization:
    64                           	callstack 0
    65  007F8A                     __initialization:
    66                           	callstack 0
    67  007F8A                     end_of_initialization:
    68                           	callstack 0
    69  007F8A                     __end_of__initialization:
    70                           	callstack 0
    71  007F8A  0100               	movlb	0
    72  007F8C  EFD6  F03F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000001                     __pcstackCOMRAM:
    76                           	callstack 0
    77  000001                     ??_main:
    78                           
    79                           ; 1 bytes @ 0x0
    80  000001                     	ds	2
    81                           
    82 ;;
    83 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    84 ;;
    85 ;; *************** function _main *****************
    86 ;; Defined at:
    87 ;;		line 79 in file "Program.c"
    88 ;; Parameters:    Size  Location     Type
    89 ;;		None
    90 ;; Auto vars:     Size  Location     Type
    91 ;;		None
    92 ;; Return value:  Size  Location     Type
    93 ;;                  1    wreg      void 
    94 ;; Registers used:
    95 ;;		wreg, status,2, cstack
    96 ;; Tracked objects:
    97 ;;		On entry : 0/0
    98 ;;		On exit  : 0/0
    99 ;;		Unchanged: 0/0
   100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   101 ;;      Params:         0       0       0       0       0       0       0
   102 ;;      Locals:         0       0       0       0       0       0       0
   103 ;;      Temps:          2       0       0       0       0       0       0
   104 ;;      Totals:         2       0       0       0       0       0       0
   105 ;;Total ram usage:        2 bytes
   106 ;; Hardware stack levels required when called: 1
   107 ;; This function calls:
   108 ;;		_config_FOSC
   109 ;;		_config_IO
   110 ;; This function is called by:
   111 ;;		Startup code after reset
   112 ;; This function uses a non-reentrant model
   113 ;;
   114                           
   115                           	psect	text0
   116  007FAC                     __ptext0:
   117                           	callstack 0
   118  007FAC                     _main:
   119                           	callstack 30
   120  007FAC                     
   121                           ;Program.c: 81:     config_FOSC();
   122  007FAC  ECC8  F03F         	call	_config_FOSC	;wreg free
   123                           
   124                           ;Program.c: 82:     config_IO();
   125  007FB0  ECCD  F03F         	call	_config_IO	;wreg free
   126  007FB4                     l716:
   127                           
   128                           ;Program.c: 84:     {;Program.c: 85:         if(PORTBbits.RB0 == 1)
   129  007FB4  A081               	btfss	129,0,c	;volatile
   130  007FB6  EFDF  F03F         	goto	u11
   131  007FBA  EFE1  F03F         	goto	u10
   132  007FBE                     u11:
   133  007FBE  EFFB  F03F         	goto	l30
   134  007FC2                     u10:
   135  007FC2                     
   136                           ;Program.c: 86:         {;Program.c: 87:             _delay((unsigned long)((1000)*(8000
      +                          000/4000.0)));
   137  007FC2  0E0B               	movlw	11
   138  007FC4  6E02               	movwf	(??_main+1)^0,c
   139  007FC6  0E26               	movlw	38
   140  007FC8  6E01               	movwf	??_main^0,c
   141  007FCA  0E5E               	movlw	94
   142  007FCC                     u27:
   143  007FCC  2EE8               	decfsz	wreg,f,c
   144  007FCE  D7FE               	bra	u27
   145  007FD0  2E01               	decfsz	??_main^0,f,c
   146  007FD2  D7FC               	bra	u27
   147  007FD4  2E02               	decfsz	(??_main+1)^0,f,c
   148  007FD6  D7FA               	bra	u27
   149  007FD8                     
   150                           ;Program.c: 88:             PORTDbits.RD0 = 1;
   151  007FD8  8083               	bsf	131,0,c	;volatile
   152                           
   153                           ;Program.c: 89:             _delay((unsigned long)((1000)*(8000000/4000.0)));
   154  007FDA  0E0B               	movlw	11
   155  007FDC  6E02               	movwf	(??_main+1)^0,c
   156  007FDE  0E26               	movlw	38
   157  007FE0  6E01               	movwf	??_main^0,c
   158  007FE2  0E5E               	movlw	94
   159  007FE4                     u37:
   160  007FE4  2EE8               	decfsz	wreg,f,c
   161  007FE6  D7FE               	bra	u37
   162  007FE8  2E01               	decfsz	??_main^0,f,c
   163  007FEA  D7FC               	bra	u37
   164  007FEC  2E02               	decfsz	(??_main+1)^0,f,c
   165  007FEE  D7FA               	bra	u37
   166  007FF0                     
   167                           ;Program.c: 90:             PORTDbits.RD0 = 0;
   168  007FF0  9083               	bcf	131,0,c	;volatile
   169                           
   170                           ;Program.c: 91:         }
   171  007FF2  EFDA  F03F         	goto	l716
   172  007FF6                     l30:
   173                           
   174                           ;Program.c: 93:         {;Program.c: 94:             PORTDbits.RD0 = 0;
   175  007FF6  9083               	bcf	131,0,c	;volatile
   176  007FF8  EFDA  F03F         	goto	l716
   177  007FFC  EF00  F000         	goto	start
   178  008000                     __end_of_main:
   179                           	callstack 0
   180                           
   181 ;; *************** function _config_IO *****************
   182 ;; Defined at:
   183 ;;		line 65 in file "Program.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   197 ;;      Params:         0       0       0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0
   200 ;;      Totals:         0       0       0       0       0       0       0
   201 ;;Total ram usage:        0 bytes
   202 ;; Hardware stack levels used: 1
   203 ;; This function calls:
   204 ;;		Nothing
   205 ;; This function is called by:
   206 ;;		_main
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text1
   211  007F9A                     __ptext1:
   212                           	callstack 0
   213  007F9A                     _config_IO:
   214                           	callstack 30
   215  007F9A                     
   216                           ;Program.c: 67:     TRISB = 0X01;
   217  007F9A  0E01               	movlw	1
   218  007F9C  6E93               	movwf	147,c	;volatile
   219                           
   220                           ;Program.c: 68:     TRISD = 0X00;
   221  007F9E  0E00               	movlw	0
   222  007FA0  6E95               	movwf	149,c	;volatile
   223                           
   224                           ;Program.c: 69:     PORTD = 0X00;
   225  007FA2  0E00               	movlw	0
   226  007FA4  6E83               	movwf	131,c	;volatile
   227                           
   228                           ;Program.c: 70:     ADCON1 = 0X0F;
   229  007FA6  0E0F               	movlw	15
   230  007FA8  6EC1               	movwf	193,c	;volatile
   231  007FAA  0012               	return		;funcret
   232  007FAC                     __end_of_config_IO:
   233                           	callstack 0
   234                           
   235 ;; *************** function _config_FOSC *****************
   236 ;; Defined at:
   237 ;;		line 73 in file "Program.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   251 ;;      Params:         0       0       0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels used: 1
   257 ;; This function calls:
   258 ;;		Nothing
   259 ;; This function is called by:
   260 ;;		_main
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text2
   265  007F90                     __ptext2:
   266                           	callstack 0
   267  007F90                     _config_FOSC:
   268                           	callstack 30
   269  007F90                     
   270                           ;Program.c: 75:     OSCCON = 0X72;
   271  007F90  0E72               	movlw	114
   272  007F92  6ED3               	movwf	211,c	;volatile
   273                           
   274                           ;Program.c: 76:     OSCTUNE = 0X00;
   275  007F94  0E00               	movlw	0
   276  007F96  6E9B               	movwf	155,c	;volatile
   277  007F98  0012               	return		;funcret
   278  007F9A                     __end_of_config_FOSC:
   279                           	callstack 0
   280  0000                     
   281                           	psect	rparam
   282  0000                     
   283                           	psect	idloc
   284                           
   285                           ;Config register IDLOC0 @ 0x200000
   286                           ;	unspecified, using default values
   287  200000                     	org	2097152
   288  200000  FF                 	db	255
   289                           
   290                           ;Config register IDLOC1 @ 0x200001
   291                           ;	unspecified, using default values
   292  200001                     	org	2097153
   293  200001  FF                 	db	255
   294                           
   295                           ;Config register IDLOC2 @ 0x200002
   296                           ;	unspecified, using default values
   297  200002                     	org	2097154
   298  200002  FF                 	db	255
   299                           
   300                           ;Config register IDLOC3 @ 0x200003
   301                           ;	unspecified, using default values
   302  200003                     	org	2097155
   303  200003  FF                 	db	255
   304                           
   305                           ;Config register IDLOC4 @ 0x200004
   306                           ;	unspecified, using default values
   307  200004                     	org	2097156
   308  200004  FF                 	db	255
   309                           
   310                           ;Config register IDLOC5 @ 0x200005
   311                           ;	unspecified, using default values
   312  200005                     	org	2097157
   313  200005  FF                 	db	255
   314                           
   315                           ;Config register IDLOC6 @ 0x200006
   316                           ;	unspecified, using default values
   317  200006                     	org	2097158
   318  200006  FF                 	db	255
   319                           
   320                           ;Config register IDLOC7 @ 0x200007
   321                           ;	unspecified, using default values
   322  200007                     	org	2097159
   323  200007  FF                 	db	255
   324                           
   325                           	psect	config
   326                           
   327                           ; Padding undefined space
   328  300000                     	org	3145728
   329  300000  FF                 	db	255
   330                           
   331                           ;Config register CONFIG1H @ 0x300001
   332                           ;	Oscillator Selection bits
   333                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
   334                           ;	Fail-Safe Clock Monitor Enable bit
   335                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   336                           ;	Internal/External Oscillator Switchover bit
   337                           ;	IESO = OFF, Oscillator Switchover mode disabled
   338  300001                     	org	3145729
   339  300001  07                 	db	7
   340                           
   341                           ;Config register CONFIG2L @ 0x300002
   342                           ;	Power-up Timer Enable bit
   343                           ;	PWRT = OFF, PWRT disabled
   344                           ;	Brown-out Reset Enable bits
   345                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   346                           ;	Brown Out Reset Voltage bits
   347                           ;	BORV = 3, Minimum setting
   348  300002                     	org	3145730
   349  300002  1F                 	db	31
   350                           
   351                           ;Config register CONFIG2H @ 0x300003
   352                           ;	Watchdog Timer Enable bit
   353                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   354                           ;	Watchdog Timer Postscale Select bits
   355                           ;	WDTPS = 32768, 1:32768
   356  300003                     	org	3145731
   357  300003  1E                 	db	30
   358                           
   359                           ; Padding undefined space
   360  300004                     	org	3145732
   361  300004  FF                 	db	255
   362                           
   363                           ;Config register CONFIG3H @ 0x300005
   364                           ;	CCP2 MUX bit
   365                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   366                           ;	PORTB A/D Enable bit
   367                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   368                           ;	Low-Power Timer1 Oscillator Enable bit
   369                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   370                           ;	MCLR Pin Enable bit
   371                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   372  300005                     	org	3145733
   373  300005  81                 	db	129
   374                           
   375                           ;Config register CONFIG4L @ 0x300006
   376                           ;	Stack Full/Underflow Reset Enable bit
   377                           ;	STVREN = ON, Stack full/underflow will cause Reset
   378                           ;	Single-Supply ICSP Enable bit
   379                           ;	LVP = ON, Single-Supply ICSP enabled
   380                           ;	Extended Instruction Set Enable bit
   381                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   382                           ;	Background Debugger Enable bit
   383                           ;	DEBUG = 0x1, unprogrammed default
   384  300006                     	org	3145734
   385  300006  85                 	db	133
   386                           
   387                           ; Padding undefined space
   388  300007                     	org	3145735
   389  300007  FF                 	db	255
   390                           
   391                           ;Config register CONFIG5L @ 0x300008
   392                           ;	Code Protection bit
   393                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   394                           ;	Code Protection bit
   395                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   396                           ;	Code Protection bit
   397                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   398                           ;	Code Protection bit
   399                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   400  300008                     	org	3145736
   401  300008  0F                 	db	15
   402                           
   403                           ;Config register CONFIG5H @ 0x300009
   404                           ;	Boot Block Code Protection bit
   405                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   406                           ;	Data EEPROM Code Protection bit
   407                           ;	CPD = OFF, Data EEPROM not code-protected
   408  300009                     	org	3145737
   409  300009  C0                 	db	192
   410                           
   411                           ;Config register CONFIG6L @ 0x30000A
   412                           ;	Write Protection bit
   413                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   414                           ;	Write Protection bit
   415                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   416                           ;	Write Protection bit
   417                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   418                           ;	Write Protection bit
   419                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   420  30000A                     	org	3145738
   421  30000A  0F                 	db	15
   422                           
   423                           ;Config register CONFIG6H @ 0x30000B
   424                           ;	Configuration Register Write Protection bit
   425                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   426                           ;	Boot Block Write Protection bit
   427                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   428                           ;	Data EEPROM Write Protection bit
   429                           ;	WRTD = OFF, Data EEPROM not write-protected
   430  30000B                     	org	3145739
   431  30000B  E0                 	db	224
   432                           
   433                           ;Config register CONFIG7L @ 0x30000C
   434                           ;	Table Read Protection bit
   435                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   436                           ;	Table Read Protection bit
   437                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   438                           ;	Table Read Protection bit
   439                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   440                           ;	Table Read Protection bit
   441                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   442  30000C                     	org	3145740
   443  30000C  0F                 	db	15
   444                           
   445                           ;Config register CONFIG7H @ 0x30000D
   446                           ;	Boot Block Table Read Protection bit
   447                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   448  30000D                     	org	3145741
   449  30000D  40                 	db	64
   450                           tosu	equ	0xFFF
   451                           tosh	equ	0xFFE
   452                           tosl	equ	0xFFD
   453                           stkptr	equ	0xFFC
   454                           pclatu	equ	0xFFB
   455                           pclath	equ	0xFFA
   456                           pcl	equ	0xFF9
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           prodh	equ	0xFF4
   462                           prodl	equ	0xFF3
   463                           indf0	equ	0xFEF
   464                           postinc0	equ	0xFEE
   465                           postdec0	equ	0xFED
   466                           preinc0	equ	0xFEC
   467                           plusw0	equ	0xFEB
   468                           fsr0h	equ	0xFEA
   469                           fsr0l	equ	0xFE9
   470                           wreg	equ	0xFE8
   471                           indf1	equ	0xFE7
   472                           postinc1	equ	0xFE6
   473                           postdec1	equ	0xFE5
   474                           preinc1	equ	0xFE4
   475                           plusw1	equ	0xFE3
   476                           fsr1h	equ	0xFE2
   477                           fsr1l	equ	0xFE1
   478                           bsr	equ	0xFE0
   479                           indf2	equ	0xFDF
   480                           postinc2	equ	0xFDE
   481                           postdec2	equ	0xFDD
   482                           preinc2	equ	0xFDC
   483                           plusw2	equ	0xFDB
   484                           fsr2h	equ	0xFDA
   485                           fsr2l	equ	0xFD9
   486                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                        _config_FOSC
                          _config_IO
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_FOSC
   _config_IO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      2       2       1        1.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 21 15:27:48 2022

                     l21 7FAA                       l30 7FF6                       l24 7F98  
                     u10 7FC2                       u11 7FBE                       u27 7FCC  
                     u37 7FE4                      l710 7F9A                      l712 7F90  
                    l720 7FD8                      l722 7FF0                      l714 7FAC  
                    l716 7FB4                      l718 7FC2                      wreg 000FE8  
                   _main 7FAC                     start 0000             ___param_bank 000000  
                  ?_main 0001                    _PORTD 000F83                    _TRISB 000F93  
                  _TRISD 000F95          __initialization 7F8A             __end_of_main 8000  
                 ??_main 0001            __activetblptr 000000                   _ADCON1 000FC1  
                 _OSCCON 000FD3     __size_of_config_FOSC 000A                   isa$std 000001  
             __accesstop 0080  __end_of__initialization 7F8A            ___rparam_used 000001  
         __pcstackCOMRAM 0001       __size_of_config_IO 0012                  _OSCTUNE 000F9B  
                __Hparam 0000                  __Lparam 0000        __end_of_config_IO 7FAC  
                __pcinit 7F8A                  __ramtop 0600                  __ptext0 7FAC  
                __ptext1 7F9A                  __ptext2 7F90     end_of_initialization 7F8A  
              _PORTBbits 000F81                _PORTDbits 000F83            ??_config_FOSC 0001  
    start_initialization 7F8A      __end_of_config_FOSC 7F9A                _config_IO 7F9A  
            _config_FOSC 7F90               ?_config_IO 0001                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0054                 isa$xinst 000000  
            ??_config_IO 0001             ?_config_FOSC 0001  
